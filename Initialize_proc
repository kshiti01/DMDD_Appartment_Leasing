---------------User Apt Booking---------------------
create or replace PROCEDURE BOOKAPTS(user_id in NUMBER, aid in NUMBER, mgid in NUMBER, bkng_fees in NUMBER, bkng_status in CHAR,bkng_date in date)
	AS
    aid1 number;
    bkng_failed EXCEPTION;
	BEGIN
	dbms_output.put_line('----------------------------------------------------------');
	IF(bkng_status='B' and bkng_fees>500)
	THEN
    insert into BOOKING(user_id,aid,mgid,booking_fees,booking_status,booking_date) values (user_id,aid,mgid,bkng_fees,bkng_status,bkng_date);
	select aid into aid1 from APARTMENT_DETAILS where aid=aid;
    update APARTMENT_DETAILS set AVAILABILITY ='N' where aid=aid;
    update lease_details set IS_ACTIVE='Y' where aid=aid1;
	dbms_output.put_line('Booking for '||aid||'successfully compeleted');
	dbms_output.put_line('----------------------------------------------------------');
	commit;
	ELSE
	raise bkng_failed;
	END IF;
    exception
    WHEN NO_DATA_FOUND THEN
    dbms_output.put_line('----------------------------------------------------------');
    DBMS_OUTPUT.PUT_LINE('Please select valid apartment for booking!');
	when bkng_failed then
	dbms_output.put_line('Please input appropriate Booking status ');
	when others then
	dbms_output.put_line(SQLERRM);
	dbms_output.put_line('Please provide the correct values for apartment booking!');
	rollback;
	end;
/

-------------Mgmt Add Apt details-------------------------
create or replace PROCEDURE MGMT_ADD_NEW_APTS(AVAILABILITY in VARCHAR2,NO_OF_TENANTS in NUMBER,BUILDING_TYPE in VARCHAR2,BUILT_YEAR in NUMBER,LOCATION in VARCHAR2,UNIT_NO in NUMBER,SQT_AREA in NUMBER,BUILDING_NO in NUMBER,AC_SYSTEM in CHAR,HEATER_SYSTEM in CHAR,HOT_WATER in CHAR,GAS_CONNECTION in CHAR,ELECTRICITY in CHAR,ASBESTOS in CHAR,REFRIGARATOR in CHAR,NO_OF_BEDROOMS in CHAR,FLOOR_NO in NUMBER,PARKING_AVAILABLE in CHAR,NO_OF_KEYS in NUMBER,OVEN in CHAR,STATUS_KEYLOCK in CHAR,STATUS_WINDOWS in CHAR,STATUS_DOOR in CHAR,STATUS_TOILETSINK in CHAR,STATUS_WASHSINK in CHAR,OWNER_NAME in VARCHAR2,SPECIAL_DESCRIPTION in VARCHAR2,NO_OF_BATHROOMS in NUMBER,NO_OF_BALCONY in VARCHAR2,BROKER_COMMISSION in NUMBER,MGID in NUMBER)
AS
add_failed EXCEPTION;
BEGIN
dbms_output.put_line('----------------------------------------------------------');
IF(AVAILABILITY='Y')
THEN
insert into APARTMENT_DETAILS(AVAILABILITY,NO_OF_TENANTS,BUILDING_TYPE,BUILT_YEAR,LOCATION,UNIT_NO,SQT_AREA,BUILDING_NO,AC_SYSTEM,HEATER_SYSTEM,HOT_WATER,GAS_CONNECTION,
ELECTRICITY,ASBESTOS,REFRIGARATOR,NO_OF_BEDROOMS,FLOOR_NO,PARKING_AVAILABLE,NO_OF_KEYS,OVEN,STATUS_KEYLOCK,STATUS_WINDOWS,STATUS_DOOR,STATUS_TOILETSINK,STATUS_WASHSINK,OWNER_NAME,SPECIAL_DESCRIPTION,NO_OF_BATHROOMS,NO_OF_BALCONY,BROKER_COMMISSION,MGID) values (AVAILABILITY,
NO_OF_TENANTS,BUILDING_TYPE,BUILT_YEAR,LOCATION,UNIT_NO,SQT_AREA,BUILDING_NO,AC_SYSTEM,HEATER_SYSTEM,HOT_WATER,GAS_CONNECTION,ELECTRICITY,ASBESTOS,REFRIGARATOR,
NO_OF_BEDROOMS,FLOOR_NO,PARKING_AVAILABLE,NO_OF_KEYS,OVEN,STATUS_KEYLOCK,STATUS_WINDOWS,STATUS_DOOR,STATUS_TOILETSINK,STATUS_WASHSINK,OWNER_NAME,SPECIAL_DESCRIPTION,NO_OF_BATHROOMS,NO_OF_BALCONY,BROKER_COMMISSION,MGID);

dbms_output.put_line('New Apartments successfully Added for'||MGID);
dbms_output.put_line('----------------------------------------------------------');
commit;
ELSE
raise add_failed;
END IF;
exception
when add_failed then
dbms_output.put_line('You can add a new apartment only if it is avaliable!! ');
when others then
dbms_output.put_line(SQLERRM);
dbms_output.put_line('Please provide the correct values for apartment booking!');
rollback;
end;
/
