-----------------------------------Tenant_Details Table -----------------------------------------
alter session set "_ORACLE_SCRIPT"=true;
SET SERVEROUTPUT ON;
DECLARE
nCount NUMBER;
BEGIN
SELECT count(*) into nCount FROM user_tables where table_name = 'TENANT_DETAILS';
IF(nCount > 0)
THEN
DBMS_OUTPUT.PUT_LINE('TABLE TENANT_DETAILS ALREADY EXISTS');
ELSE
EXECUTE IMMEDIATE 'CREATE TABLE TENANT_DETAILS(
tid NUMBER NOT NULL PRIMARY KEY,
lid NUMBER NOT NULL,
id_proof_submitted CHAR(1) NOT NULL,
id_proof_document_type VARCHAR(255) NOT NULL
)';
EXECUTE IMMEDIATE 'INSERT INTO TENANT_DETAILS(TID, LID,id_proof_submitted,id_proof_document_type)
VALUES(''200'',''111'',''Y'',''Passport'')';



END IF;
commit;
END;

---------------------------------------------------------------------------------------------------

----------------------------SHABANA---------------------------------------------
------------------------------tenant details--------------------------------
DROP TABLE TENANT_DETAILS CASCADE CONSTRAINTS PURGE;
select * from TENANT_DETAILS;

create or replace procedure tenant_details_creation is table_name varchar2(4000);
BEGIN
-- table creation query
table_name:='
CREATE TABLE TENANT_DETAILS(
tid NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 200 INCREMENT BY 1),
lid NUMBER NOT NULL,
id_proof_submitted CHAR(1) NOT NULL,
id_proof_document_type VARCHAR(255) NOT NULL,
CONSTRAINT PK_TID PRIMARY KEY (TID),
CONSTRAINT FK_LID FOREIGN KEY (LID)
REFERENCES ADMIN.LEASE_DETAILS(LID)
)';
EXECUTE IMMEDIATE table_name;
end tenant_details_creation;

execute tenant_details_creation;
--------------------------notification details------------------------------
create or replace procedure notification_creation is table_name varchar2(4000);
BEGIN
-- table creation query
table_name:='CREATE TABLE NOTIFICATION(
nid NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 700 INCREMENT BY 1),
notification_type VARCHAR(50) NOT NULL,
notification_comments VARCHAR(100) NOT NULL,
date_created DATE DEFAULT SYSDATE NOT NULL,
notification_date DATE NOT NULL,
mgid NUMBER NOT NULL,
tid NUMBER NOT NULL,
CONSTRAINT CHK_NTFY_DATE CHECK (notification_date >= date_created),
CONSTRAINT PK_NID PRIMARY KEY (NID),
CONSTRAINT FK_MGID FOREIGN KEY (MGID) REFERENCES ADMIN.MANAGEMENT_DETAILS(MGID),
CONSTRAINT FK_TID FOREIGN KEY (TID) REFERENCES ADMIN.TENANT_DETAILS(TID)
)';
EXECUTE IMMEDIATE table_name;
end notification_creation;

execute notification_creation;



---------------------------------COMPLAINT DETAILS----------------------------------
create or replace procedure complaint_details_creation is table_name varchar2(4000);
BEGIN
-- table creation query
table_name:='CREATE TABLE COMPLAINT_DETAILS(
cdid Number GENERATED BY DEFAULT AS IDENTITY(START WITH 900 INCREMENT BY 1),
c_ref_no Number NOT NULL,
c_raised_by_name varchar(50) NOT NULL,
c_raised_by_apt Number NOT NULL,
c_raised_time Number NOT NULL,
c_raised_date date NOT NULL,
c_category varchar(50) NOT NULL,
c_severity varchar(10) NOT NULL,
c_description varchar(100) NOT NULL,
c_status char(1) NOT NULL,
c_closure_date date NOT NULL,
CO_ID NUMBER NOT NULL,
NID NUMBER NOT NULL,
CONSTRAINT PK_CDID PRIMARY KEY (CDID),
CONSTRAINT FK_CO_ID FOREIGN KEY (CO_ID) REFERENCES ADMIN.CONTRACTOR_DETAILS(CO_ID),
CONSTRAINT FK_NID FOREIGN KEY (NID) REFERENCES ADMIN.NOTIFICATION(NID)
)';
EXECUTE IMMEDIATE table_name;
end complaint_details_creation;

EXECUTE complaint_details_creation;


-----------------------------------LAUNDRY DETAILS-----------------------------------------------

create or replace procedure LAUNDRY_DETAILS_CREATION is table_name varchar2(4000);
BEGIN
-- table creation query
table_name:='CREATE TABLE LAUNDRY_DETAILS(
la_id NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 800 INCREMENT BY 1),
la_machine_no Number NOT NULL,
la_washing_load varchar(15) NOT NULL,
la_drying_load varchar(15) NOT NULL,
la_time_started date NOT NULL,
la_time_ended date NOT NULL,
la_status char(1) NOT NULL,
la_fee_washing Number NOT NULL,
la_fee_drying Number NOT NULL,
la_payment_received char(1) NOT NULL,
NID NUMBER NOT NULL,
CONSTRAINT PK_LA_ID PRIMARY KEY (LA_ID),
CONSTRAINT FK_NID FOREIGN KEY (NID) REFERENCES ADMIN.NOTIFICATION(NID)
)';
EXECUTE IMMEDIATE table_name;
end LAUNDRY_DETAILS_CREATION;


EXECUTE LAUNDRY_DETAILS_CREATION;


